name: Deploy TTS Medical API to VPS

on:
  push:
    branches: [main]
    paths:
      - 'api/**'
      - '.github/workflows/**'
      - 'nginx/**'
      - 'scripts/**'
  pull_request:
    branches: [main]
    paths:
      - 'api/**'

env:
  IMAGE_NAME: tts-medical-api
  CONTAINER_NAME: tts-medical-backend
  PORT: 5100

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📂 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'api/package-lock.json'

      - name: 📦 Install dependencies
        working-directory: ./api
        run: npm ci

      - name: 🏗️ Build TypeScript
        working-directory: ./api
        run: npm run build

      - name: 🧪 Run tests
        working-directory: ./api
        run: npm test

      - name: 🐳 Test Docker build
        working-directory: ./api
        run: |
          docker build --target production -t ${{ env.IMAGE_NAME }}:test .
          docker run --rm -d --name test-container -p 5100:5100 ${{ env.IMAGE_NAME }}:test
          sleep 5
          docker stop test-container || true

  deploy:
    name: 🚀 Deploy to VPS
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: 📂 Checkout repository
        uses: actions/checkout@v4

      - name: 🔐 Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_URMAPHA_PRIVATE_SSH }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: 🧪 Test SSH Connection
        run: ssh -i ~/.ssh/id_rsa ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "echo '✅ SSH connection successful'"

      - name: 📦 Update source code and set permissions
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} \
          "cd ~/tts-medical-management 2>/dev/null || git clone https://github.com/AInelo/tts-medical-management.git ~/tts-medical-management; \
           cd ~/tts-medical-management && git pull origin main && chmod +x scripts/*.sh"

      - name: 🚀 Execute deployment
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} \
          "cd ~/tts-medical-management && ./scripts/deploy.sh ${{ env.IMAGE_NAME }} ${{ env.CONTAINER_NAME }} ${{ env.PORT }}"

      - name: 🔧 Configure NGINX
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} \
          "cd ~/tts-medical-management && ls -l ./scripts/setup-nginx.sh && ./scripts/setup-nginx.sh"

      - name: 🧹 Cleanup old images
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} \
          "~/tts-medical-management/scripts/cleanup.sh ${{ env.IMAGE_NAME }}"

      - name: 📊 Show deployment status
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} \
          "~/tts-medical-management/scripts/status.sh ${{ env.CONTAINER_NAME }}"

      - name: 🔔 Notify deployment status
        if: always()
        run: |
          if [ $? -eq 0 ]; then
            echo "✅ Déploiement réussi sur ${{ secrets.VPS_HOST }}"
            echo "🚀 Application accessible sur le port ${{ env.PORT }}"
          else
            echo "❌ Échec du déploiement"
            exit 1
          fi